<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="preference">

	<!-- 전체 선호도 목록 -->
	<select id="preference_list" resultType="com.naver.springbox.dto.PreferenceBean">
	    <![CDATA[
		select * from preference
		]]>
	</select>
	
	<!-- 최신 곡 목록-->
	<select id="recent_music_list" parameterType="int" resultType="com.naver.springbox.dto.MusicBean">
	    <![CDATA[
		select * from 
		  (select rownum rnum,music_num,music_genre,music_artist,
		  music_title,music_album,music_publishdate,albumcoverfilepath,music_lyrics
		  from (select * from music order by music_publishdate desc))
		  where rnum <= #{count}
		]]>
	</select>
	
	<!-- 최신 공연 목록 -->
	<select id="recent_concert_list" parameterType="int" resultType="com.naver.springbox.dto.ConcertBean">
		<![CDATA[
		select * from 
			(select rownum rnum,concert_num,concert_title,concert_place,concert_startdate,concert_enddate,
					  posterfilepath,concert_artist,locationx,locationy,concert_price
					  from (select * from concert order by concert_startdate desc))
		      where rnum <=  #{count}
		]]>
	</select>
	
	
	
	<!-- 선호도(추천) 곡, 공연 관련 SQL 들...  -->
	
	<!-- 선호도 곡 목록의 데이터 개수를 리턴해주는 sql -->
	<select id="count_preference_music_list" resultType="Integer">
		select count(*)	from music
	</select>
	
	<!-- 선호도 공연 목록의 데이터 개수를 리턴해주는 sql -->
	<select id="count_preference_concert_list" resultType="Integer">
		select count(*)	from concert
	</select>
	
	<!-- 선호도 곡 목록-->
	<select id="preference_music_list" parameterType="java.util.Map" resultType="com.naver.springbox.dto.MusicBean">
	    <![CDATA[
		select * from 
		  (select rownum rnum,music_num,music_genre,music_artist,
		  music_title,music_album,music_publishdate,albumcoverfilepath,music_lyrics
		  from (select * from music order by music_publishdate desc))
		  where rnum >= #{start} and rnum <= #{end} 
		]]>
	</select>
	
	<!-- 선호도 공연 목록 -->
	<select id="preference_concert_list" parameterType="java.util.Map" resultType="com.naver.springbox.dto.ConcertBean">
		<![CDATA[
		select * from 
			(select rownum rnum,concert_num,concert_title,concert_place,concert_startdate,concert_enddate,
					  posterfilepath,concert_artist,locationx,locationy,concert_price
					  from (select * from concert order by concert_startdate desc))
		      where rnum >= #{start} and rnum <= #{end}
		]]>
	</select>
	
	<!-- 가장 취향이 비슷한 사람을 줄 세우는 쿼리 -->
	<select id="preference_member_list" parameterType="String" resultType="com.naver.springbox.dto.MemberBean">
		<![CDATA[
		select user_id, music_count from(
			select user_id, music_count, rownum rnum from( -- 카운트
			select user_id, count(music_num) as music_count -- 통계
			from preference 
			  where music_num in 
			  (select music_num from preference where user_id = #{userId} and rate >= 3.5)
			  and user_id != #{userId}
			group by user_id
			order by music_count desc)
			) where rnum <= 3
		]]>
	</select>
	
	<!-- 사용자 선호도에 따른 음악 검색 -->
	<select id="preference_music_list2" parameterType="java.util.Map" resultType="com.naver.springbox.dto.MusicBean">
		<![CDATA[
		select * from 
			(select rownum rnum,music_num,music_genre,music_artist,
			music_title,music_album,music_publishdate,albumcoverfilepath,music_lyrics from
				(select distinct music.music_num,music_genre,music_artist,
				music_title,music_album,music_publishdate,albumcoverfilepath,music_lyrics,rate
				from preference, music
				where preference.music_num = music.music_num
				and user_id in
				]]> 
				<foreach collection="userList" item="item" open="(" separator="," close=")">
		            #{item}
		        </foreach>
				
				<![CDATA[
				and rate >= 3.5
				)
			)
			where rnum >= #{start} and rnum <= #{end}
		]]>
	</select>
	
	<!-- 사용자 선호도에 따른 음악 검색(카운트) -->
	<select id="preference_music_count" parameterType="java.util.Map" resultType="Integer">
		<![CDATA[
		select count(*) from 
			(select rownum rnum,music_num,music_genre,music_artist,
			music_title,music_album,music_publishdate,albumcoverfilepath,music_lyrics from
				(select distinct music.music_num,music_genre,music_artist,
				music_title,music_album,music_publishdate,albumcoverfilepath,music_lyrics,rate
				from preference, music
				where preference.music_num = music.music_num
				and user_id in
				]]> 
				<foreach collection="userList" item="item" open="(" separator="," close=")">
		            #{item}
		        </foreach>
				
				<![CDATA[
				and rate >= 3.5
				)
			)
		]]>
	</select>
</mapper>