<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- 데이터베이스 접속 정보 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>oracle.jdbc.driver.OracleDriver</value>
		</property>
		<property name="url">
			<value>jdbc:oracle:thin:@192.168.30.62:1521:xe</value>
		</property>
		<property name="username">
			<value>box</value>
		</property>
		<property name="password">
			<value>box123</value>
		</property>
	</bean>

	<!-- MyBatis 사용을 위한 SqlSession 빈 만들기 -->
	<!-- 여기서 빈을 만들면 다른 모든 DAO 클래스들은 여기서 만든 SqlSession을 주입받아서 사용만 하면 됩니다. -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:/mapper/*.xml" />
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!-- 트랜잭션 처리를 위한 객체를 생성 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 트랜잭션을 처리할 객체를 설정 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>
